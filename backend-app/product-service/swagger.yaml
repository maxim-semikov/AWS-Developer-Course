openapi: 3.0.0
info:
  title: Product Service API
  description: API for managing products in the Shop
  version: 1.0.0

servers:
  - url: https://frks5bel29.execute-api.eu-central-1.amazonaws.com/prod
    description: Product Service API

paths:
  /products:
    get:
      summary: Get all products
      description: Returns a list of all available products
      operationId: getProductsList
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/{productId}:
    get:
      summary: Get product by ID
      description: Returns a single product by its ID
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "iPhone 13 Pro"
        description:
          type: string
          example: "Latest iPhone model with advanced camera system"
        price:
          type: number
          format: float
          example: 999
        count:
          type: integer
          example: 24
      required:
        - id
        - title
        - price
        - count

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
